// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/driver/v1/driver.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lat           float64                `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           float64                `protobuf:"fixed64,4,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{0}
}

func (x *Driver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Driver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Driver) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Driver) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type RegisterDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lat           float64                `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           float64                `protobuf:"fixed64,3,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDriverRequest) Reset() {
	*x = RegisterDriverRequest{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDriverRequest) ProtoMessage() {}

func (x *RegisterDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDriverRequest.ProtoReflect.Descriptor instead.
func (*RegisterDriverRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDriverRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterDriverRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *RegisterDriverRequest) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type RegisterDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        *Driver                `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDriverResponse) Reset() {
	*x = RegisterDriverResponse{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDriverResponse) ProtoMessage() {}

func (x *RegisterDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDriverResponse.ProtoReflect.Descriptor instead.
func (*RegisterDriverResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterDriverResponse) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

type FindAvailableDriversRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float64                `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           float64                `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAvailableDriversRequest) Reset() {
	*x = FindAvailableDriversRequest{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAvailableDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAvailableDriversRequest) ProtoMessage() {}

func (x *FindAvailableDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAvailableDriversRequest.ProtoReflect.Descriptor instead.
func (*FindAvailableDriversRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{3}
}

func (x *FindAvailableDriversRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *FindAvailableDriversRequest) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type FindAvailableDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       []*Driver              `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAvailableDriversResponse) Reset() {
	*x = FindAvailableDriversResponse{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAvailableDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAvailableDriversResponse) ProtoMessage() {}

func (x *FindAvailableDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAvailableDriversResponse.ProtoReflect.Descriptor instead.
func (*FindAvailableDriversResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{4}
}

func (x *FindAvailableDriversResponse) GetDrivers() []*Driver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type UpdateDriverStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsAvailable   bool                   `protobuf:"varint,2,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverStatusRequest) Reset() {
	*x = UpdateDriverStatusRequest{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverStatusRequest) ProtoMessage() {}

func (x *UpdateDriverStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDriverStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDriverStatusRequest) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

type UpdateDriverStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverStatusResponse) Reset() {
	*x = UpdateDriverStatusResponse{}
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverStatusResponse) ProtoMessage() {}

func (x *UpdateDriverStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_driver_v1_driver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_driver_v1_driver_proto_rawDescGZIP(), []int{6}
}

var File_api_proto_driver_v1_driver_proto protoreflect.FileDescriptor

const file_api_proto_driver_v1_driver_proto_rawDesc = "" +
	"\n" +
	" api/proto/driver/v1/driver.proto\x12\tdriver.v1\"P\n" +
	"\x06Driver\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03lat\x18\x03 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x04 \x01(\x01R\x03lon\"O\n" +
	"\x15RegisterDriverRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03lat\x18\x02 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x03 \x01(\x01R\x03lon\"C\n" +
	"\x16RegisterDriverResponse\x12)\n" +
	"\x06driver\x18\x01 \x01(\v2\x11.driver.v1.DriverR\x06driver\"A\n" +
	"\x1bFindAvailableDriversRequest\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x02 \x01(\x01R\x03lon\"K\n" +
	"\x1cFindAvailableDriversResponse\x12+\n" +
	"\adrivers\x18\x01 \x03(\v2\x11.driver.v1.DriverR\adrivers\"N\n" +
	"\x19UpdateDriverStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fis_available\x18\x02 \x01(\bR\visAvailable\"\x1c\n" +
	"\x1aUpdateDriverStatusResponse2\xb2\x02\n" +
	"\rDriverService\x12U\n" +
	"\x0eRegisterDriver\x12 .driver.v1.RegisterDriverRequest\x1a!.driver.v1.RegisterDriverResponse\x12g\n" +
	"\x14FindAvailableDrivers\x12&.driver.v1.FindAvailableDriversRequest\x1a'.driver.v1.FindAvailableDriversResponse\x12a\n" +
	"\x12UpdateDriverStatus\x12$.driver.v1.UpdateDriverStatusRequest\x1a%.driver.v1.UpdateDriverStatusResponseB\x1aZ\x18uber-clone/pkg/driver/v1b\x06proto3"

var (
	file_api_proto_driver_v1_driver_proto_rawDescOnce sync.Once
	file_api_proto_driver_v1_driver_proto_rawDescData []byte
)

func file_api_proto_driver_v1_driver_proto_rawDescGZIP() []byte {
	file_api_proto_driver_v1_driver_proto_rawDescOnce.Do(func() {
		file_api_proto_driver_v1_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_driver_v1_driver_proto_rawDesc), len(file_api_proto_driver_v1_driver_proto_rawDesc)))
	})
	return file_api_proto_driver_v1_driver_proto_rawDescData
}

var file_api_proto_driver_v1_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_driver_v1_driver_proto_goTypes = []any{
	(*Driver)(nil),                       // 0: driver.v1.Driver
	(*RegisterDriverRequest)(nil),        // 1: driver.v1.RegisterDriverRequest
	(*RegisterDriverResponse)(nil),       // 2: driver.v1.RegisterDriverResponse
	(*FindAvailableDriversRequest)(nil),  // 3: driver.v1.FindAvailableDriversRequest
	(*FindAvailableDriversResponse)(nil), // 4: driver.v1.FindAvailableDriversResponse
	(*UpdateDriverStatusRequest)(nil),    // 5: driver.v1.UpdateDriverStatusRequest
	(*UpdateDriverStatusResponse)(nil),   // 6: driver.v1.UpdateDriverStatusResponse
}
var file_api_proto_driver_v1_driver_proto_depIdxs = []int32{
	0, // 0: driver.v1.RegisterDriverResponse.driver:type_name -> driver.v1.Driver
	0, // 1: driver.v1.FindAvailableDriversResponse.drivers:type_name -> driver.v1.Driver
	1, // 2: driver.v1.DriverService.RegisterDriver:input_type -> driver.v1.RegisterDriverRequest
	3, // 3: driver.v1.DriverService.FindAvailableDrivers:input_type -> driver.v1.FindAvailableDriversRequest
	5, // 4: driver.v1.DriverService.UpdateDriverStatus:input_type -> driver.v1.UpdateDriverStatusRequest
	2, // 5: driver.v1.DriverService.RegisterDriver:output_type -> driver.v1.RegisterDriverResponse
	4, // 6: driver.v1.DriverService.FindAvailableDrivers:output_type -> driver.v1.FindAvailableDriversResponse
	6, // 7: driver.v1.DriverService.UpdateDriverStatus:output_type -> driver.v1.UpdateDriverStatusResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_driver_v1_driver_proto_init() }
func file_api_proto_driver_v1_driver_proto_init() {
	if File_api_proto_driver_v1_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_driver_v1_driver_proto_rawDesc), len(file_api_proto_driver_v1_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_driver_v1_driver_proto_goTypes,
		DependencyIndexes: file_api_proto_driver_v1_driver_proto_depIdxs,
		MessageInfos:      file_api_proto_driver_v1_driver_proto_msgTypes,
	}.Build()
	File_api_proto_driver_v1_driver_proto = out.File
	file_api_proto_driver_v1_driver_proto_goTypes = nil
	file_api_proto_driver_v1_driver_proto_depIdxs = nil
}
